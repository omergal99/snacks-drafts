{"version":3,"sources":["pages/Main.js","pages/Main2.js","pages/Main3.js","pages/Main4.js","cmps/PilotSwitch.js","pages/pilotTable.js","cmps/NavBar.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["Main","state","isOverlayOpen","imgNumber","ev","console","log","target","dataset","number","this","setState","react_default","a","createElement","className","onClick","imgSelected","bind","data-number","closeOverlay","style","backgroundImage","concat","Component","Main2","i","colors","backgroundColor","color","Main3","Main4","React","memo","_ref","isChecked","idx","checkInput","onHandleChanged","useRef","switchOn","Audio","switchOff","volume","id","ref","type","defaultChecked","htmlFor","onTouchStart","current","checked","play","_this","onSwitchChanged","table","map","count","key","cmps_PilotSwitch","NavBar","react_router_dom","exact","to","activeClassName","Router","cmps_NavBar","react_router","path","component","pilotTable","App","src_Router","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36d0f8fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    isOverlayOpen: false,\r\n    imgNumber: '1'\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  imgSelected(ev) {\r\n    // console.log('hiii',ev.target.getAttribute('data-number'))\r\n    console.log('hiii', ev.target.dataset.number)\r\n    this.setState({ isOverlayOpen: true, imgNumber: ev.target.dataset.number })\r\n  }\r\n  \r\n  closeOverlay(){\r\n    this.setState({ isOverlayOpen: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"main\">\r\n\r\n        <header>\r\n          <h2>New Zeland</h2>\r\n          <p>The project may be tricier then it seems, look aroud carfully.</p>\r\n        </header>\r\n\r\n        <div className=\"img-container flex wrap space-even align-center\">\r\n          <div onClick={this.imgSelected.bind(this)} data-number=\"1\" className=\"circle\"></div>\r\n          <div onClick={this.imgSelected.bind(this)} data-number=\"2\" className=\"reactangle\"></div>\r\n          <div onClick={this.imgSelected.bind(this)} data-number=\"3\" className=\"square\"></div>\r\n          <div onClick={this.imgSelected.bind(this)} data-number=\"4\" className=\"triangle\"> </div>\r\n        </div>\r\n\r\n        {this.state.isOverlayOpen &&\r\n          <div className=\"overlay\">\r\n            <h2>New Zeland</h2>\r\n            <div className=\"btn-close\" onClick={this.closeOverlay.bind(this)}>X</div>\r\n            <div className=\"img-Extended\"\r\n              style={{ backgroundImage: `url(\"assets/img/new-zealand-${this.state.imgNumber}.jpg\")` }}>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Main","import React, { Component } from 'react';\r\n\r\n\r\nclass Main2 extends Component {\r\n\r\n  state={\r\n    i: 0,\r\n    colors:['red','green','blue']\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section className=\"main2\">\r\n\r\n        <div>\r\n          <div style={{ backgroundColor: this.state.colors[this.state.i] , color: '#fff' }} className=\"poligon\"></div>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Main2","import React, { Component } from 'react';\r\n\r\n\r\nclass Main3 extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section className=\"main3\">\r\n\r\n        <div className=\"all-pic\">\r\n          <div className=\"full\">\r\n            <div className=\"head\"></div>\r\n            <div className=\"stomec\" ></div>\r\n            <div className=\"hands\"></div>\r\n            <div className=\"legs\"></div>\r\n          </div>\r\n\r\n          <div className=\"hole\">\r\n            {/* <img src=\"assets/img/man/man hole.png\" /> */}\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Main3","import React, { Component } from 'react';\r\n\r\n\r\nclass Main4 extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section className=\"main4\">\r\n\r\n        <div className=\"wrap\">\r\n          <div className=\"tommy\">\r\n            <div className=\"first-line\">we never close</div>\r\n            <div className=\"second-line\">shop online @ tommy.com</div>\r\n            <div>\r\n              <div className=\"circle left-top\"></div>\r\n              <div className=\"cover left-top\"></div>\r\n              <div className=\"circle left-bottom\"></div>\r\n              <div className=\"cover left-bottom\"></div>\r\n              <div className=\"circle right-top\"></div>\r\n              <div className=\"cover right-top\"></div>\r\n              <div className=\"circle right-bottom\"></div>\r\n              <div className=\"cover right-bottom\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Main4","import React, { useRef } from 'react';\r\n\r\nfunction PilotSwitch({ isChecked, idx, onHandleChanged }) {\r\n\r\n  const checkInput = useRef(null);\r\n\r\n  const switchOn = new Audio(\"assets/sounds/pilot/switch on.mp3\");\r\n  const switchOff = new Audio(\"assets/sounds/pilot/switch off.mp3\");\r\n  switchOn.volume = 0.5;\r\n  switchOff.volume = 0.7;\r\n\r\n  const handleChanged = (ev) => {\r\n    (ev.target.checked) ? switchOn.play() : switchOff.play();\r\n  }\r\n  const handleTouch = (ev) => {\r\n    // console.log('aasasasas')\r\n    // console.log(ev.target)\r\n    // console.log(checkInput.current)\r\n    (!checkInput.current.checked) ? switchOn.play() : switchOff.play();\r\n    // if(checkInput.current.checked){\r\n    //   console.log(checkInput.current)\r\n    //   switchOn.play()\r\n    // }else{\r\n    //   console.log(checkInput.current)\r\n    //   console.log(7777)\r\n    //   switchOff.play()\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"pilot-switch\">\r\n      <span className=\"switch\">\r\n        <span className=\"switch-border1\">\r\n          <span className=\"switch-border2\">\r\n            <input id={`switch${idx}`} ref={checkInput}\r\n              // onClick={handleChanged.bind(this)}\r\n              type=\"checkbox\" defaultChecked={isChecked} />\r\n            <label htmlFor={`switch${idx}`}\r\n              onTouchStart={handleTouch.bind(this)}\r\n            ></label>\r\n            <span className=\"switch-top\"></span>\r\n            <span className=\"switch-shadow\"></span>\r\n            <span className=\"switch-handle\"></span>\r\n            <span className=\"switch-handle-left\"></span>\r\n            <span className=\"switch-handle-right\"></span>\r\n            <span className=\"switch-handle-top\"></span>\r\n            <span className=\"switch-handle-bottom\"></span>\r\n            <span className=\"switch-handle-base\"></span>\r\n            <span className=\"switch-led switch-led-green\">\r\n              <span className=\"switch-led-border\">\r\n                <span className=\"switch-led-light\">\r\n                  <span className=\"switch-led-glow\"></span>\r\n                </span>\r\n              </span>\r\n            </span>\r\n            <span className=\"switch-led switch-led-red\">\r\n              <span className=\"switch-led-border\">\r\n                <span className=\"switch-led-light\">\r\n                  <span className=\"switch-led-glow\"></span>\r\n                </span>\r\n              </span>\r\n            </span>\r\n          </span>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PilotSwitch)\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport PilotSwitch from '../cmps/PilotSwitch';\r\n\r\nfunction pilotTable() {\r\n\r\n  const counts = [true, true, false];\r\n\r\n  // const switchOn = new Audio(\"assets/sounds/pilot/switch on.mp3\");\r\n  // const switchOff = new Audio(\"assets/sounds/pilot/switch off.mp3\");\r\n\r\n  const onSwitchChanged = (ev) => {\r\n    // (ev.target.checked) ? switchOn.play() : switchOff.play();\r\n  }\r\n\r\n  const table = counts.map((count, idx) => {\r\n    return <div key={idx}>\r\n      <PilotSwitch isChecked={count} idx={idx} onHandleChanged={onSwitchChanged.bind(this)} />\r\n    </div>\r\n  })\r\n\r\n  return (\r\n    <div className=\"pilot-table\">\r\n      {table}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(pilotTable)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n  <div className=\"nav-bar flex space-around align-center\">\r\n    <NavLink exact to=\"/\" activeClassName=\"activeRoute\">Main</NavLink>\r\n    <NavLink to=\"/Main2\" activeClassName=\"activeRoute\">Square</NavLink>\r\n    <NavLink to=\"/Main3\" activeClassName=\"activeRoute\">Human</NavLink>\r\n    <NavLink to=\"/Main4\" activeClassName=\"activeRoute\">Tommy</NavLink>\r\n    <NavLink to=\"/pilotTable\" activeClassName=\"activeRoute\">Pilot</NavLink>\r\n  </div>\r\n)\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n// import { BrowserRouter, HashRouter, Route, Switch, Link, NavLink } from 'react-router-dom';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\n// PAGES\r\nimport Main from './pages/Main';\r\nimport Main2 from './pages/Main2';\r\nimport Main3 from './pages/Main3';\r\nimport Main4 from './pages/Main4';\r\nimport pilotTable from './pages/pilotTable';\r\n\r\n//CMPS\r\nimport NavBar from './cmps/NavBar';\r\n\r\nclass Router extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        {/* <BrowserRouter> */}\r\n        <div className=\"app-nav-route\">\r\n\r\n          <div >\r\n            <NavBar />\r\n          </div>\r\n\r\n          <div className=\"route\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Main} />\r\n              <Route exact path=\"/Main2\" component={Main2} />\r\n              <Route exact path=\"/Main3\" component={Main3} />\r\n              <Route exact path=\"/Main4\" component={Main4} />\r\n              <Route exact path=\"/pilotTable\" component={pilotTable} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </div>\r\n        {/* </BrowserRouter> */}\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport './assets/css/App.scss';\n\nimport Router from './Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}